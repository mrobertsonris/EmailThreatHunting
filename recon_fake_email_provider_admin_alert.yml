name: "Recon - Fake Email Provider Admin Alert"
description: "Fake Google and Microsoft Admin Alert Notifications."
type: "rule"
severity: "high"
source: |
    type.inbound
    and length(body.links) < 10
    and (
      any(body.links,
          regex.icontains(.display_text,
                          '((verify|view|click|download|goto|keep|VÎ¹ew|release).{0,10}(alert|current|download|fax|message|notific|same)s?)',
                          'validate.{0,15}account',
                          '(retry|update).{0,10}payment',
                          'check activity',
                          '(listen|play).{0,10}(vm|voice)',
                          'clarify.{0,20}(deposit|wallet|funds)',
                          'enter.{0,15}teams',
          )
      )
      or any(body.links,
            (
              regex.contains(.display_text, "\\bVIEW", "Alert", "\\bnotif", )
              and regex.match(.display_text, "^[^a-z]*[A-Z][^a-z]*$")
            )
      )
    )
    and any(ml.nlu_classifier(body.current_thread.text).intents,
            .name == "cred_theft" and .confidence == "high"
    )
    and (
      not profile.by_sender().solicited
      or (
        profile.by_sender().any_messages_malicious_or_spam
        and not profile.by_sender().any_false_positives
      )
    )
    and not profile.by_sender().any_false_positives
    and not sender.email.email == "no-reply@accounts.google.com"
    // negate highly trusted sender domains unless they fail DMARC authentication
    and (
      (
        sender.email.domain.root_domain in $high_trust_sender_root_domains
        and (
          any(distinct(headers.hops, .authentication_results.dmarc is not null),
              strings.ilike(.authentication_results.dmarc, "*fail")
          )
        )
      )
      or sender.email.domain.root_domain not in $high_trust_sender_root_domains
    )
authors:
- name: "Michael Robertson"